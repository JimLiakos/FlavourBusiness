<sw:PageDialogViewEmulator   x:Class="MenuItemsEditor.Views.PriceList.PriceListPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

      xmlns:Behaviors="clr-namespace:WPFUIElementObjectBind.Behaviors;assembly=WPFConnectableControls"
      xmlns:resx="clr-namespace:MenuItemsEditor.Properties" 
      xmlns:wpftoolkitex="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:sw="clr-namespace:StyleableWindow;assembly=StyleableWindow"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MenuItemsEditor.Views.PriceList"
      xmlns:ViewModel="clr-namespace:MenuItemsEditor.ViewModel.PriceList"
      xmlns:ConnectableCtrl="clr-namespace:WPFUIElementObjectBind;assembly=WPFConnectableControls" xmlns:ControlsEx="clr-namespace:System.Windows.Controls;assembly=WPFConnectableControls"
                             mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PrriceListPage">
    <Page.DataContext>
        <ConnectableCtrl:ObjectContext ViewControlObjectType="{x:Type ViewModel:PriceListPresentation}"    Name="Connection" TransactionOption="Required"  />
    </Page.DataContext>
    <Page.Resources>
        <ResourceDictionary>
            <ViewModel:PriceListPresentation x:Key="D_PriceListPresentation"></ViewModel:PriceListPresentation>

            <ControlTemplate x:Key="MenuSeparatorTemplate">
                <Separator />
            </ControlTemplate>

            <ContextMenu  x:Key="NodeContextMenu" ItemsSource="{Binding ContextMenuItems}">
                <ContextMenu.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Command" Value="{Binding Command}" />
                        <Setter Property="Header" Value="{Binding Header}" />
                        <Setter Property="Icon" Value="{Binding Icon}" />
                        <Setter Property="CommandParameter" Value="{Binding Path=Parameter}" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                <Setter Property="Template" Value="{StaticResource MenuSeparatorTemplate}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContextMenu.ItemContainerStyle>
            </ContextMenu>

        </ResourceDictionary>
    </Page.Resources>

    <Grid DataContext="{Binding Value}" d:DataContext="{d:DesignInstance ViewModel:PriceListPresentation, IsDesignTimeCreatable=True}" >
        <sw:DialogContentControl BeforeTransactionCommit="{Binding BeforeTransactionCommitCommand}" Buttons="OKCancel"   HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Title="{x:Static resx:Resources.PriceListPageTitle}" InitialWidth="1100" InitialHeight="600" Icon="/MenuItemsEditor;component/Image/price-list32.png">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="17*"/>
                    <ColumnDefinition Width="220*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="197*"/>
                    <ColumnDefinition Width="129*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="38"/>
                    <RowDefinition Height="7"/>
                    <RowDefinition Height="1"/>
                    <RowDefinition/>

                </Grid.RowDefinitions>

                <Label Grid.Column="1" Margin="3,0,3,0"  Content="{x:Static resx:Resources.PriceListDescriptionLabel}" VerticalAlignment="Center" Height="20" />
                <wpftoolkitex:WatermarkTextBox  Grid.Row="1" Grid.Column="1"  Margin="2,0,2,0" VerticalContentAlignment="Center" VerticalAlignment="Top" Text="{Binding Name,UpdateSourceTrigger=LostFocus}" TextWrapping="Wrap" Watermark="{x:Static resx:Resources.WritePriceListDescriptionPrompt}" AcceptsReturn="True"  />


                <Label Grid.Column="3" Margin="3,0,3,0"  Content="{x:Static resx:Resources.TaxesComboBoxLabel}" VerticalAlignment="Center" Height="20" />
                <ComboBox Grid.Row="1" Grid.Column="3"  Margin="2,0,2,0" ItemsSource="{Binding TaxesContexts}" SelectedValue="{Binding PriceListTaxContext}" DisplayMemberPath="Description" VerticalContentAlignment="Center" VerticalAlignment="Top" ></ComboBox>


                <!--<CheckBox Content="Taxes" IsChecked="{Binding Taxes}" Grid.Column="3"  VerticalAlignment="Center" Margin="5,0,0,5"></CheckBox>-->
                <!--<Grid Grid.Row="4" Grid.Column="1"  Visibility="{Binding TaxesVisibility}" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <ListBox ItemsSource="{Binding TaxableTypes}"  Grid.Row="0"  VerticalAlignment="Stretch" SelectedValue="{Binding SelectedTaxableType}" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ControlsEx:EditableTextBlock Text="{Binding Description,Mode=TwoWay, UpdateSourceTrigger=LostFocus}"   IsInEditMode="{Binding Edit,Mode=TwoWay}" ></ControlsEx:EditableTextBlock>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>


                    </ListBox>

                    <Grid  Grid.Row="1"  Background="WhiteSmoke" Margin="0,0,0,0">
                        <Border Grid.Row="1" BorderBrush="{StaticResource ListBoxBorderBrush}" BorderThickness="0.6" >

                            <Grid>
                                <StackPanel Margin="2,0,2,0" HorizontalAlignment="Left" Orientation="Horizontal">

                                    <Button Command="{Binding DeleteSelectedTaxableTypeCommand}"  Style="{DynamicResource ListViewBarButtonStyle}" Width="36" Height="36"  Margin="1">
                                        <Image Width="16" Height="16" Source="pack://application:,,,/MenuItemsEditor;Component/Image/Delete.png"></Image>
                                    </Button>

                                    <Button Command="{Binding AddTaxableTypeCommand}"  Style="{DynamicResource ListViewBarButtonStyle}" Width="36" Height="36"  Margin="1">
                                        <Image Width="16" Height="16" Source="pack://application:,,,/MenuItemsEditor;Component/Image/add16.png"></Image>
                                    </Button>
                                </StackPanel>
                                <StackPanel Margin="2,0,2,0" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button Command="{Binding RenameSelectedTaxableTypeCommand}"  Style="{DynamicResource ListViewBarButtonStyle}" Width="36" Height="36"  Margin="1">
                                        <Image Width="16" Height="16" Source="pack://application:,,,/MenuItemsEditor;Component/Image/Rename16.png"></Image>
                                    </Button>
                                    <Button Command="{Binding EditSelectedTaxableTypeCommand}" Style="{DynamicResource ListViewBarButtonStyle}" Width="36" Height="36" Margin="1">
                                        <Image Width="16" Height="16" Source="pack://application:,,,/MenuItemsEditor;Component/Image/Edit16.png"></Image>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>

                </Grid>-->



                <TreeView   Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="4"  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" x:Name="MenuItemsTreeView"  ItemsSource="{Binding ItemsToChoose}"  >
                    <TreeView.Resources>
                        <DataTemplate x:Key="NormalTemplate">
                            <ContentControl Background="Transparent"  >
                                <ContentControl.InputBindings>
                                    <MouseBinding MouseAction="WheelClick"
                  Command="{Binding DoubleClickCommand}"
                  CommandParameter="Wheel Click"/>
                                </ContentControl.InputBindings>
                                <!--<i:Interaction.Triggers>
                                  
                                  <i:EventTrigger EventName="MouseDoubleClick">
                                      
                                      <i:InvokeCommandAction Command="{Binding Path=DoubleClickCommand, Mode=OneWay}"/>
                                  </i:EventTrigger>
                              </i:Interaction.Triggers>-->

                                <StackPanel   AllowDrop="True" Orientation="Horizontal" Margin="4,2,4,2" >
                                    <!--DragEnter="TreeNode_DragEnter" DragLeave="TreeNode_DragLeave" DragOver="TreeNode_DragOver" Drop="TreeNode_Drop" MouseMove="ItemMouseMove"  MouseDown="ItemMouseDown"-->
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type StackPanel}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasContextMenu}" Value="True" >
                                                    <Setter Property="ContextMenu" Value="{StaticResource NodeContextMenu}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>

                                    </StackPanel.Resources>
                                    <StackPanel.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DoubleClickCommand}" />
                                    </StackPanel.InputBindings>


                                    <CheckBox Visibility="{Binding CheckBoxVisibility}" IsEnabled="{Binding IncludeAllItemsAllowed}" VerticalAlignment="Center" IsChecked="{Binding CanPrepared}"></CheckBox>
                                    <Image Width="16" Height="16" Source="{Binding TreeImage}" Margin="0,0,5,0"></Image>
                                    <ControlsEx:EditableTextBlock Background="Transparent" IsEditable="{Binding IsEditable}"  IsInEditMode="{Binding Edit,Mode=TwoWay}" Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" >
                                        <!--<ControlsEx:EditableTextBlock.InputBindings>
                                      <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DoubleClickCommand}" />
                                  </ControlsEx:EditableTextBlock.InputBindings>-->
                                    </ControlsEx:EditableTextBlock>

                                    <ControlsEx:EditableTextBlock Width="30" Visibility="{Binding Path=PreparationTimeIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"  Margin="5,0,0,0"  TextAlignment="Right"    HorizontalAlignment="Stretch"  TextBoxInputType="Decimal"  IsInEditMode="{Binding  Path=Edit,Mode=OneWay}" Text="{Binding Path=PreparationTimeSpanInMin,Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                    <TextBlock Grid.Column="1"  Visibility="{Binding Path=PreparationTimeIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center" Text="min"></TextBlock>


                                </StackPanel>
                            </ContentControl>
                        </DataTemplate>
                        <DataTemplate x:Key="EditTemplate">
                            <StackPanel AllowDrop="True" Orientation="Horizontal" Margin="4,2,4,2" >
                                <!--DragEnter="TreeNode_DragEnter" DragLeave="TreeNode_DragLeave" DragOver="TreeNode_DragOver" Drop="TreeNode_Drop" MouseMove="ItemMouseMove"  MouseDown="ItemMouseDown"-->
                                <StackPanel.Resources>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasContextMenu}" Value="True" >
                                                <Setter Property="ContextMenu" Value="{StaticResource NodeContextMenu}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                </StackPanel.Resources>

                                <CheckBox Visibility="{Binding CheckBoxVisibility}" IsEnabled="{Binding IncludeAllItemsAllowed}" VerticalAlignment="Center" IsChecked="{Binding CanPrepared}"></CheckBox>
                                <Image Width="16" Height="16" Source="{Binding TreeImage}" Margin="0,0,5,0"></Image>
                                <ControlsEx:EditableTextBlock IsEditable="{Binding IsEditable}"  IsInEditMode="{Binding Edit,Mode=TwoWay}" Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" />

                                <ControlsEx:EditableTextBlock Width="30" Visibility="{Binding Path=PreparationTimeIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"  Margin="5,0,0,0"  TextAlignment="Right"    HorizontalAlignment="Stretch"  TextBoxInputType="Decimal"  IsInEditMode="{Binding  Path=Edit,Mode=OneWay}" Text="{Binding Path=PreparationTimeSpanInMin,Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                <TextBlock Grid.Column="1"  Visibility="{Binding Path=PreparationTimeIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center" Text="min"></TextBlock>


                            </StackPanel>

                        </DataTemplate>

                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                        </Style>
                    </TreeView.Resources>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding Path=SelectedCommand, Mode=OneWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <TreeView.ItemContainerStyle>

                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsExpanded" Value="{Binding IsNodeExpanded, Mode=TwoWay}"/>
                            <Setter Property="Behaviors:TreeViewItemBehavior.IsBroughtIntoViewWhenSelected" Value="True"/>
                            <!--<EventSetter Event="Selected" Handler="TreeViewSelectedItemChanged" />-->
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF7DA2CE" />
                                    <Setter Property="Background" Value="#FFCCE2FC" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>


                        <HierarchicalDataTemplate   ItemsSource="{Binding Members}" >
                            <ContentControl>
                                <ContentControl.Resources>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasContextMenu}" Value="True" >
                                                <Setter Property="ContextMenu" Value="{StaticResource NodeContextMenu}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Resources>
                                <local:ItemsPriceInfoView/>



                            </ContentControl>


                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>

                </TreeView>

            </Grid>

            <sw:DialogContentControl.Footer>

                <ContentControl  >
                    <Button Visibility="{Binding Path=PublishAllowed, Converter={StaticResource BooleanToVisibilityConverter}}"    HorizontalAlignment="Right" Width="90" Command="{Binding PublishCommand}" >
                        <StackPanel Orientation="Horizontal">
                            <Image Width="20" Source="/MenuItemsEditor;component/Image/cloud-computing24.png"/>
                            <TextBlock Margin="4,0,0,0" Text="{x:Static resx:Resources.PublishMenuContextMenuHeader}" ></TextBlock>
                        </StackPanel>
                    </Button>
                </ContentControl>
            </sw:DialogContentControl.Footer>

        </sw:DialogContentControl>

    </Grid>


</sw:PageDialogViewEmulator>
