<UserControl x:Class="FLBManager.Views.Preparation.PreparationStationItemsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FLBManager.Views.Preparation" xmlns:sw="clr-namespace:StyleableWindow;assembly=StyleableWindow" xmlns:ViewModel="clr-namespace:FLBManager.ViewModel.Preparation" xmlns:wpftoolkitex="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:resx="clr-namespace:FLBManager.Properties" xmlns:ControlsEx="clr-namespace:System.Windows.Controls;assembly=WPFConnectableControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ViewModel:PreparationStationPresentation x:Key="D_PreparationStationPresentation"></ViewModel:PreparationStationPresentation>
            
                <ControlTemplate x:Key="MenuSeparatorTemplate">
                    <Separator />
                </ControlTemplate>
            
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <sw:DialogContentControl Buttons="OnlyBack" InitialHeight="650" InitialWidth="850"     Icon="/MenuDesignerLib;component/Resources/Images/Metro/chef16.png"
        Title="{x:Static resx:Resources.PreparationStationWindowTitle}"  d:DataContext="{StaticResource D_PreparationStationPresentation}"  >
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="17*"/>
                    <ColumnDefinition Width="405*"/>
                    <ColumnDefinition Width="331*"/>
                    <ColumnDefinition Width="29*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="37"/>
                    <RowDefinition/>

                </Grid.RowDefinitions>
                
                <Label Grid.Column="1" Grid.Row="0" Margin="3,0,3,3"  Content="{x:Static resx:Resources.PreparationStationDescriptionLabel}" VerticalAlignment="Bottom" Height="20" />
                <wpftoolkitex:WatermarkTextBox  Grid.Row="1" Grid.Column="1"  Margin="2,0,2,0" VerticalContentAlignment="Center" VerticalAlignment="Top" Text="{Binding Name,UpdateSourceTrigger=LostFocus}" TextWrapping="Wrap" Watermark="{x:Static resx:Resources.WritePreparationStationDescriptionPrompt}"  HorizontalAlignment="Stretch" AcceptsReturn="True" Height="24" />
                <CheckBox FlowDirection="RightToLeft" Grid.Row="1"  x:Name="PreparationTimeVisibility" Grid.Column="2" VerticalAlignment="Center" Content="Preparation time is visible" IsChecked="{Binding PreparationTimeIsVisible}" ></CheckBox>
                <Label Grid.Row="2" Grid.Column="1" Margin="3,0,3,3" Content="{x:Static resx:Resources.PreparationStationIdentityLabel}"   VerticalAlignment="Bottom" Height="20"/>

                <TextBox Margin="2,0,2,0"  VerticalAlignment="Top" Text="{Binding PreparationStationIdentity,Mode=OneWay}" TextWrapping="Wrap" IsReadOnly="True"  HorizontalAlignment="Stretch"  Grid.Row="3" Grid.ColumnSpan="2"  Grid.Column="1" AcceptsReturn="True" Height="22" />
                <TreeView  DragEnter="DragEnter" Drop="Drop" DragLeave="DragLeave" DragOver="DragOver"  Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" x:Name="MenuItemsTreeView"  ItemsSource="{Binding PreparationStationSubjects}"  >
                    <!--<TreeView.Resources>
                
                </TreeView.Resources>-->

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding Path=SelectedCommand, Mode=OneWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <TreeView.ItemContainerStyle>

                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsExpanded" Value="{Binding IsNodeExpanded, Mode=TwoWay}"/>
                            <!--<EventSetter Event="Selected" Handler="TreeViewSelectedItemChanged" />-->
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF7DA2CE" />
                                    <Setter Property="Background" Value="#FFCCE2FC" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>


                        <HierarchicalDataTemplate   ItemsSource="{Binding Members}" >
                            <HierarchicalDataTemplate.Resources>

                                <ContextMenu  x:Key="NodeContextMenu" ItemsSource="{Binding ContextMenuItems}">
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Command" Value="{Binding Command}" />
                                            <Setter Property="Header" Value="{Binding Header}" />
                                            <Setter Property="Icon" Value="{Binding Icon}" />
                                            <Setter Property="CommandParameter" Value="{Binding Path=Parameter}" />

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                                    <Setter Property="Template" Value="{StaticResource MenuSeparatorTemplate}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                </ContextMenu>

                            </HierarchicalDataTemplate.Resources>

                            <StackPanel AllowDrop="True" Orientation="Horizontal" Margin="4,2,4,2" >
                                <!--DragEnter="TreeNode_DragEnter" DragLeave="TreeNode_DragLeave" DragOver="TreeNode_DragOver" Drop="TreeNode_Drop" MouseMove="ItemMouseMove"  MouseDown="ItemMouseDown"-->
                                <StackPanel.Resources>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasContextMenu}" Value="True" >
                                                <Setter Property="ContextMenu" Value="{StaticResource NodeContextMenu}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                </StackPanel.Resources>

                                <CheckBox Visibility="{Binding CheckBoxVisibility}" IsEnabled="{Binding IncludeAllItemsAllowed}" VerticalAlignment="Center" IsChecked="{Binding CanPrepared}"></CheckBox>
                                <Image Width="16" Height="16" Source="{Binding TreeImage}" Margin="0,0,5,0"></Image>
                                <ControlsEx:EditableTextBlock IsEditable="{Binding IsEditable}"  IsInEditMode="{Binding Edit,Mode=TwoWay}" Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" />

                                <ControlsEx:EditableTextBlock Width="30" Visibility="{Binding Path=PreparationTimeIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"  Margin="5,0,0,0"  TextAlignment="Right"    HorizontalAlignment="Stretch"  TextBoxInputType="Decimal"  IsInEditMode="{Binding  Path=Edit,Mode=OneWay}" Text="{Binding Path=PreparationTimeSpanInMin,Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                <TextBlock Grid.Column="1"  Visibility="{Binding Path=PreparationTimeIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center" Text="min"></TextBlock>


                            </StackPanel>

                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>

                </TreeView>

            </Grid>

        </sw:DialogContentControl>


    </Grid>
</UserControl>
