<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:s="clr-namespace:FloorLayoutDesigner"
                    xmlns:Controls="clr-namespace:System.Windows.Controls;assembly=WPFConnectableControls" 
                    xmlns:ContrοlsEx="clr-namespace:WPFUIElementObjectBind;assembly=WPFConnectableControls"
                     xmlns:Resx="clr-namespace:FloorLayoutDesigner.Properties"
                    xmlns:c="clr-namespace:FloorLayoutDesigner.Controls">
    <ControlTemplate x:Key="MenuSeparatorTemplate">
        <Separator />
    </ControlTemplate>
    <Style TargetType="{x:Type Shape}"
           x:Key="ThumbCorner">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Stroke"
                Value="LightSlateGray" />
        <Setter Property="StrokeThickness"
                Value=".5" />
        <Setter Property="Width"
                Value="7" />
        <Setter Property="Height"
                Value="7" />
        <Setter Property="Margin"
                Value="-2" />
        <Setter Property="Fill">
            <Setter.Value>
                <RadialGradientBrush Center="0.3, 0.3"
                                     GradientOrigin="0.3, 0.3"
                                     RadiusX="0.7"
                                     RadiusY="0.7">
                    <GradientStop Color="White"
                                  Offset="0" />
                    <GradientStop Color="DarkSlateGray"
                                  Offset="0.9" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuItemStype" TargetType="{x:Type MenuItem}">
        <Setter Property="Command" Value="{Binding Command}" />
        <Setter Property="Header" Value="{Binding Header}" />
        <Setter Property="Icon" Value="{Binding Icon}" />
        <Setter Property="ItemsSource"  Value="{Binding SubMenuCommands}" />

        <!--<Setter Property="CommandParameter" Value="{Binding Path=Parameter}" />-->

        <Style.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                <Setter Property="Template" Value="{StaticResource MenuSeparatorTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <ContextMenu x:Key="DesignerItemContextMenu" ItemsSource="{Binding ContextMenuItems}" ItemContainerStyle="{StaticResource MenuItemStype}" >
        <!--<ContextMenu.ItemContainerStyle>
            
        </ContextMenu.ItemContainerStyle>-->
        <!--<MenuItem Header="{x:Static Resx:Resources.HallLayoutLabelFontMenuItemHeader}"  Command="{x:Static s:DesignerCanvas.LabelFont}">
            <MenuItem.Icon>
                <Image Source="Images/Metro/font16.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static Resx:Resources.HallLayoutLabelBkMenuItemHeader}"  Command="{x:Static s:DesignerCanvas.LabelFont}">
            <MenuItem.Icon>
                <Image Source="Images/Metro/textBackground16.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem Header="ShapeServicepointToggle 3"  Command="{x:Static s:DesignerCanvas.ShapeServicepointToggle}">
            <MenuItem.Icon>
                <Image Source="Images/Metro/ServicePoint.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Cut" Command="{x:Static ApplicationCommands.Cut}">
            <MenuItem.Icon>
                <Image Source="Images/Metro/Cut.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Copy" Command="{x:Static ApplicationCommands.Copy}">
            <MenuItem.Icon>
                <Image Source="Images/Metro/Cut.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Paste" Command="{x:Static ApplicationCommands.Paste}">
            <MenuItem.Icon>
                <Image Source="Images/Metro/Paste.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Delete" Command="{x:Static ApplicationCommands.Delete}">
            <MenuItem.Icon>
                <Image Source="Images/Metro/Delete.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Grouping">
            <MenuItem Header="Group" Command="{x:Static s:DesignerCanvas.Group}">
                <MenuItem.Icon>
                    <Image Source="Images/Metro/Group.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Ungroup" Command="{x:Static s:DesignerCanvas.Ungroup}">
                <MenuItem.Icon>
                    <Image Source="Images/Metro/Ungroup.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="Order">
            <MenuItem Header="Bring Forward" Command="{x:Static s:DesignerCanvas.BringForward}">
                <MenuItem.Icon>
                    <Image Source="Images/Metro/BringForward.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Bring To Front" Command="{x:Static s:DesignerCanvas.BringToFront}">
                <MenuItem.Icon>
                    <Image Source="Images/Metro/BringToFront.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Send Backward" Command="{x:Static s:DesignerCanvas.SendBackward}">
                <MenuItem.Icon>
                    <Image Source="Images/Metro/SendBackward.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Send To Back" Command="{x:Static s:DesignerCanvas.SendToBack}">
                <MenuItem.Icon>
                    <Image Source="Images/Metro/SendToBack.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>-->
    </ContextMenu>

    <!-- Connector Style -->
    <Style TargetType="{x:Type s:Connector}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Cursor" Value="Cross"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:Connector}">
                    <Grid>
                        <!-- transparent extra space makes connector easier to hit -->
                        <Rectangle Fill="Transparent" Margin="-2"/>
                        <Rectangle Fill="Lavender" StrokeThickness="1" Stroke="#AA000080"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ConnectorDecoratorTemplate Default Template -->
    <ControlTemplate x:Key="ConnectorDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid Margin="-5">
            <s:Connector x:Name="Left" Orientation="Left" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <s:Connector x:Name="Top" Orientation="Top" VerticalAlignment="Top" HorizontalAlignment="Center"/>
            <s:Connector x:Name="Right" Orientation="Right" VerticalAlignment="Center" HorizontalAlignment="Right"/>
            <s:Connector x:Name="Bottom" Orientation="Bottom" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
        </Grid>
    </ControlTemplate>

    <!-- ResizeDecorator Default Template -->
    <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid>
            <Grid Opacity="0" SnapsToDevicePixels="true">
                <c:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 -4 0 0"
                     VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                <c:ResizeThumb Width="3" Cursor="SizeWE" Margin="-4 0 0 0"
                     VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                <c:ResizeThumb Width="3" Cursor="SizeWE" Margin="0 0 -4 0"
                     VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                <c:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 0 0 -4"
                     VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                <c:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="-6 -6 0 0"
                     VerticalAlignment="Top" HorizontalAlignment="Left"/>
                <c:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="0 -6 -6 0"
                     VerticalAlignment="Top" HorizontalAlignment="Right"/>
                <c:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="-6 0 0 -6"
                     VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                <c:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="0 0 -6 -6"
                     VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
            </Grid>
            <Grid IsHitTestVisible="False"
                              Opacity="1"
                              Margin="-3">
                <Rectangle SnapsToDevicePixels="True"
                                       StrokeThickness="1"
                                       Margin="1">
                    <Rectangle.Stroke>
                        <LinearGradientBrush StartPoint="0, 0"
                                                         EndPoint="1, .3"
                                                         Opacity=".7">
                            <GradientStop Color="SlateGray"
                                                      Offset="0" />
                            <GradientStop Color="LightGray"
                                                      Offset=".5" />
                            <GradientStop Color="SlateGray"
                                                      Offset="1" />
                        </LinearGradientBrush>
                    </Rectangle.Stroke>
                </Rectangle>
                <Ellipse Style="{StaticResource ThumbCorner}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top" />
                <Ellipse Style="{StaticResource ThumbCorner}"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Top" />
                <Ellipse Style="{StaticResource ThumbCorner}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Bottom" />
                <Ellipse Style="{StaticResource ThumbCorner}"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Bottom" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!-- DragThumb Default Template -->
    <Style TargetType="{x:Type c:DragThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:DragThumb}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DesignerItem Style -->
    <Style TargetType="{x:Type s:DesignerItem}">
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:DesignerItem}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type s:DesignerItem}}}"
                          ContextMenu="{StaticResource DesignerItemContextMenu}">

                        <Popup Placement="Center" StaysOpen="False"   IsOpen="{Binding ServicePointsPopupIsOpen}" AllowsTransparency="True"  >
                            <ContentControl Style="{StaticResource PopupContentStyle}" >
                                <Grid  Background="White" >
                                    <ListBox ItemsSource="{Binding ServicesPoints}" SelectedValue="{Binding SelectedServicesPoint}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="14,5,14,5">
                                                    <TextBlock Text="{Binding Description}"></TextBlock>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                            </ContentControl>
                        </Popup>


                        <Popup Placement="Center" StaysOpen="False"   IsOpen="{Binding ServicePointLabelEditPopupIsOpen}"  AllowsTransparency="True"  >
                            <ContentControl Style="{StaticResource PopupContentStyle}" FocusManager.FocusedElement="{Binding ElementName=FocusedElement}" >

                                <Grid  Background="White" >
                                    <Border Margin="5" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1"   Padding="5">
                                        <Grid  >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="110"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition></RowDefinition>
                                                <RowDefinition></RowDefinition>
                                                <RowDefinition></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Label Content="Description:" VerticalAlignment="Center"></Label>
                                            <TextBox Margin="0,4,0,4" Grid.Column="1"   x:Name="FocusedElement"  VerticalContentAlignment="Center"  Text="{Binding Label, Mode=TwoWay}" Width="100" ></TextBox>
                                            <Label  Grid.Row="1" Content="Seats:" HorizontalAlignment="Right" VerticalAlignment="Center"></Label>
                                            <Controls:TextBoxNumberWithUnit Number="{Binding Seats,UpdateSourceTrigger=LostFocus,Mode=TwoWay}"  Margin="0,4,0,4" Grid.Row="1" Grid.Column="1" Width="100" VerticalContentAlignment="Center"></Controls:TextBoxNumberWithUnit>
                                            <ItemsControl Grid.ColumnSpan="2" Grid.Row="2" ItemsSource="{Binding MealTypes}" >
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <TextBlock Text="{Binding Name}"></TextBlock>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                            <!--<Contrοls:TextBoxNumberWithUnit  VerticalContentAlignment="Center" Number="{Binding Seats,UpdateSourceTrigger=LostFocus,Mode=TwoWay}" Unit="" Margin="0,4,0,4"/>-->
                                            <!--<TextBox Margin="0,4,0,4" Grid.Row="1" Grid.Column="1"  Text="{Binding Seats, Mode=TwoWay}"  VerticalContentAlignment="Center"   Width="100" ></TextBox>-->

                                        </Grid>
                                    </Border>
                                </Grid>
                            </ContentControl>
                        </Popup>


                        <Grid x:Name="PART_Main"   DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <!-- PART_DragThumb -->
                            <c:DragThumb x:Name="PART_DragThumb" 
                                     Cursor="SizeAll"/>
                            <!-- PART_ResizeDecorator -->
                            <Control x:Name="PART_ResizeDecorator" 
                                 Visibility="Collapsed"
                                 Template="{StaticResource ResizeDecoratorTemplate}"/>
                            <!-- PART_ContentPresenter -->
                            <ContentPresenter x:Name="PART_ContentPresenter"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          Margin="{TemplateBinding ContentControl.Padding}"/>
                            <!-- PART_ConnectorDecorator -->
                            <Control x:Name="PART_ConnectorDecorator"
                                 Visibility="Hidden"
                                 Template="{StaticResource ConnectorDecoratorTemplate}"/>


                        </Grid>
                        <!--<TextBlock HorizontalAlignment="Center"  FontStretch="SemiExpanded" FontSize="20" VerticalAlignment="Center" x:Name="PART_Label"  Foreground="#FF530B18" FontFamily="Arial">
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="1" Direction="320" Color="#FF7E083D" Opacity="1" BlurRadius="1.5" />
                            </TextBlock.Effect>
                        </TextBlock>-->
                        <Border  VerticalAlignment="Center" HorizontalAlignment="Center"  Visibility="{Binding LabelVisibility}" CornerRadius="{Binding HallLayoutViewModel.LabelBkCornerRadius}" >
                            <Border.Background>
                                <SolidColorBrush Color="{Binding HallLayoutViewModel.LabelBkColor}" Opacity="{Binding Path=HallLayoutViewModel.Opacity}"/>
                            </Border.Background>
                            <Grid Margin="{Binding HallLayoutViewModel.LabelMargin}">
                                <ContrοlsEx:OutlineTextBlock  Text="{Binding Label}" Visibility="{Binding LabelVisibility}" 
                                   HorizontalAlignment="Center"  
                                   VerticalAlignment="Center" x:Name="PART_Label"  
                                    Fill="{Binding HallLayoutViewModel.Foreground}" 
                                    FontFamily="{Binding HallLayoutViewModel.FontFamily}" 
                                    FontSize="{Binding HallLayoutViewModel.FontSize}" 
                                    FontSpacing="{Binding HallLayoutViewModel.FontSpacing}"
                                    Stroke="{Binding HallLayoutViewModel.StrokeFill}" 
                                    FontStyle="{Binding HallLayoutViewModel.FontStyle}" 
                                    FontWeight="{Binding HallLayoutViewModel.FontWeight}"
                                    AllCaps="{Binding HallLayoutViewModel.AllCaps}"
                                    StrokeThickness="{Binding HallLayoutViewModel.StrokeThickness}"
                                    Effect="{Binding HallLayoutViewModel.DropShadowEffect}"
                                   >
                                    <!--<ContrοlsEx:OutlineTextBlock.Effect>
                                <DropShadowEffect ShadowDepth="1" Direction="320" Color="#FFAAD0E2" Opacity="1" BlurRadius="1.5" />
                            </ContrοlsEx:OutlineTextBlock.Effect>-->
                                    <!--<ContrοlsEx:OutlineTextBlock.Background>
                                <SolidColorBrush Color="Azure" Opacity="0.5" />
                            </ContrοlsEx:OutlineTextBlock.Background>-->
                                </ContrοlsEx:OutlineTextBlock>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsGroup}">
                            <Setter TargetName="PART_DragThumb" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsSelected}"/>
                                <Condition Value="{x:Static sys:Guid.Empty}" Binding="{Binding RelativeSource={RelativeSource Self},Path=ParentID}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ResizeDecorator" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsDragConnectionOver}">
                            <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Visible"/>
                        </DataTrigger>-->
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsGroup}">
                            <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>