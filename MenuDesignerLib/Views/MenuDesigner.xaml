<UserControl x:Class="MenuDesigner.Views.MenuDesignerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:s="clr-namespace:MenuDesigner"
             xmlns:local="clr-namespace:MenuDesigner.Views"
             xmlns:sw="clr-namespace:StyleableWindow;assembly=StyleableWindow"
             xmlns:ViewModel="clr-namespace:MenuDesigner.ViewModel.MenuCanvas"
             xmlns:Views="clr-namespace:MenuDesigner.Views"
			 xmlns:MenuCanvas="clr-namespace:MenuDesigner.Views.MenuCanvas"
             xmlns:Shapes="clr-namespace:MenuDesigner.Shapes"
             xmlns:ContrοlsEx="clr-namespace:WPFUIElementObjectBind;assembly=WPFConnectableControls" 
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/" 
             xmlns:resx="clr-namespace:MenuDesigner.Properties"
             mc:Ignorable="d" d:DesignWidth="738.198" d:DesignHeight="600.984" 
             d:DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <UserControl.Resources>

        
        <SolidColorBrush x:Key="WindowBackColor" Color="White"/>
        <ViewModel:BookViewModel x:Key="DesignTimeMenu"></ViewModel:BookViewModel>
        <ContextMenu x:Key="DesignerCanvasContextMenu">

            <MenuItem Header="{x:Static resx:Resources.EditMenuItemHeader}" Command="{Binding ClickPseudoCommand}">
                <MenuItem.Icon>
                    <Image Source="/MenuDesignerLib;component/Resources/Images/Metro/Edit16.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <!--<MenuItem Header="Select All" Command="{x:Static MenuCanvas:DesignerCanvas.SelectAll}"/>
            <MenuItem Header="Add Page" Command="{x:Static local:MenuDesignerControl.NewPage}"/>
            <MenuItem Header="Move Page Left" Command="{x:Static local:MenuDesignerControl.MovePageLeft}"/>-->
        </ContextMenu>

        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid >
        <Grid.InputBindings>
            <MouseBinding Gesture="LeftClick" Command="{Binding ClickPseudoCommand}" ></MouseBinding>
        </Grid.InputBindings>

        <!--<Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>-->

        <ScrollViewer x:Name="BookScrollViewer"  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <Grid  MouseWheel="Grid_MouseWheel" Background="#FFF8F8F8" >
                <Popup Name="DDNTPopup" IsOpen="{Binding ShowPopUpMessage}" StaysOpen="False" Placement="Mouse" MaxWidth="300" PopupAnimation="Fade" >
                    <Border BorderBrush="Beige" BorderThickness="3" Background="LightGoldenrodYellow">
                        <TextBlock Margin="10"  TextWrapping="Wrap" >
                                                Visit <Hyperlink NavigateUri="http://dailydotnettips.com" >http://dailydotnettips.com</Hyperlink>
                                                for more information. Daily .NET Tips has now more than 170 very useful tips and Tricks. To keep update on daily tips,  
                                                <Hyperlink NavigateUri="http://feeds.feedburner.com/dailydotnettips/MvvJ" >subscribe</Hyperlink> our feed or follow us on
                                                Twitter at  <Hyperlink NavigateUri="http://twitter.com/#!/dailydotnettips">@dailydotnettips</Hyperlink>
                        </TextBlock>
                    </Border>

                </Popup>
                <Viewbox x:Name="ZoomViewBox">
                    <ItemsControl  Name="ItemsControl" ItemsSource="{Binding Pages}"   >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid x:Name="Page" Background="AliceBlue" Margin="0,0,0,0" Width="{Binding PageWidth}" Height="{Binding PageHeight}"  >


                                    <Border BorderThickness="{Binding Border}" BorderBrush="Black">
                                        <Border BorderThickness="{Binding BorderThickness}" BorderBrush="Transparent" >
                                            <Border.Effect>
                                                <DropShadowEffect BlurRadius="10" ShadowDepth="4" />
                                            </Border.Effect>
                                            <Grid Background="White">

                                            </Grid>

                                        </Border>


                                    </Border>
                                    <Border Margin="{Binding BorderThickness}">
                                        <Grid  AllowDrop="True"   Background="White" DragEnter="Grid_DragEnter" DragLeave="Grid_DragLeave" DragOver="Grid_DragOver" Drop="Grid_Drop">

                                            <Grid IsHitTestVisible="False" Opacity="{Binding BackgroundOpacity}" Margin="{Binding BackgroundMargin}">
                                                <Grid.LayoutTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform X="{Binding BackgroundOffsetX}" Y="{Binding BackgroundOffsetY}"></TranslateTransform>
                                                        <ScaleTransform ScaleY="{Binding BackgroundScaleY}"  ScaleX="{Binding BackgroundScaleX}"/>
                                                    </TransformGroup>
                                                </Grid.LayoutTransform>
                                                <Grid.Background>
                                                    <ImageBrush ImageSource="{Binding BackgroundUri}" Stretch="{Binding BackgroundStretch}">

                                                    </ImageBrush>
                                                </Grid.Background>
                                            </Grid>

                                            <ItemsControl  ItemsSource="{Binding ItemsToShowInCanvas}"  x:Name="canvas">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>

                                                        <MenuCanvas:DesignerCanvas AllowDrop="True"   Focusable="true" FocusVisualStyle="{x:Null}" >


                                                        </MenuCanvas:DesignerCanvas>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.Resources>

                                                    <DataTemplate DataType="{x:Type ViewModel:MenuCanvasLinePresentation}">
                                                        <Shapes:ArrowLine ArrowEnds="{Binding ArrowEnds}" StrokeDashArray="{Binding LineDashes}" StrokeDashCap="{Binding StrokeDashCap}" Visibility="{Binding Visibility}" X2="{Binding X2}" X1="{Binding X1}" Y1="{Binding Y1}" Y2="{Binding Y2}" Stroke="{Binding Stroke}"  StrokeThickness="{Binding StrokeThickness}" />
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type ViewModel:TranslationLinePresentation}">
                                                        <Rectangle Visibility="{Binding Visibility}" Canvas.Left="{Binding X1}" Canvas.Top="{Binding Y1}" Height="9"  Width="{Binding Width}"  StrokeThickness="17" >
                                                            <Rectangle.Stroke>
                                                                <VisualBrush Viewbox="0,1,3,2" ViewboxUnits="Absolute" Viewport="0,1,6,17" ViewportUnits="Absolute" TileMode="Tile">
                                                                    <VisualBrush.Visual>
                                                                        <Path Data="M 0,1 C1,1 1,2 3,1" Stroke="#FFA2068D" StrokeThickness="0.2" StrokeEndLineCap="Square" StrokeStartLineCap="Square" />
                                                                    </VisualBrush.Visual>
                                                                </VisualBrush>
                                                            </Rectangle.Stroke>
                                                        </Rectangle>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type ViewModel:AccentImagePresentation}">
                                                        <Grid Visibility="{Binding Visibility}" Width="{Binding Width}" Height="{Binding Height}">
                                                            <svgc:SvgViewbox IsHitTestVisible="False"  Name="svg" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" s:SvgViewboxAttachedProperties.Drawing="{Binding AccentDrawing}" />
                                                        </Grid>
                                                    </DataTemplate>

                                                    <DataTemplate DataType="{x:Type ViewModel:MenuCanvasItemTextViewModel}">
                                                        <ContrοlsEx:OutlineTextBlock Visibility="{Binding Visibility}" IsHitTestVisible="False" x:Name="textBox" 
                                                                                     Width="{Binding Width}" 
                                                                                     Fill="{Binding Foreground}" 
                                                                                     FontFamily="{Binding FontFamily}" 
                                                                                     FontSize="{Binding FontSize}" 
                                                                                     FontSpacing="{Binding FontSpacing}"
                                                                                     Stroke="{Binding StrokeFill}" 
                                                                                     FontStyle="{Binding FontStyle}" 
                                                                                     FontWeight="{Binding FontWeight}"
                                                                                    AllCaps="{Binding AllCaps}"
                                                                                    StrokeThickness="{Binding StrokeThickness}"
                                                                                    Underline="{Binding Underline}"
                                                                                    OverLine="{Binding Overline}"
                                                                                    Text="{Binding Text}"
                                                                                     Effect="{Binding DropShadowEffect}">
                                                        </ContrοlsEx:OutlineTextBlock>

                                                        <!--<TextBlock   FontFamily="{Binding FontFamily}" FontSize="{Binding FontSize}" Foreground="{Binding Foreground}" FontStyle="{Binding FontStyle}" FontWeight="{Binding FontWeight}" Text="{Binding Text}"></TextBlock>\-->

                                                    </DataTemplate>


                                                    <DataTemplate DataType="{x:Type ViewModel:PriceHeadingViewModel}">
                                                        <ContrοlsEx:OutlineTextBlock  Visibility="{Binding Visibility}" IsHitTestVisible="False" x:Name="textBox" 
                                                                                     
                                                                                     Fill="{Binding Foreground}" 
                                                                                     FontFamily="{Binding FontFamily}" 
                                                                                     FontSize="{Binding FontSize}" 
                                                                                     FontSpacing="{Binding FontSpacing}"
                                                                                     Stroke="{Binding StrokeFill}" 
                                                                                     FontStyle="{Binding FontStyle}" 
                                                                                     FontWeight="{Binding FontWeight}"
                                                                                    AllCaps="{Binding AllCaps}"
                                                                                    StrokeThickness="{Binding StrokeThickness}"
                                                                                    Underline="{Binding Underline}"
                                                                                    OverLine="{Binding Overline}"
                                                                                    Text="{Binding Text}"
                                                                                     Effect="{Binding DropShadowEffect}">
                                                            <ContrοlsEx:OutlineTextBlock.RenderTransform>
                                                                <RotateTransform Angle="{Binding Angle}" CenterX="{Binding CenterX}" CenterY="{Binding CenterY}"  ></RotateTransform>
                                                            </ContrοlsEx:OutlineTextBlock.RenderTransform>
                                                        </ContrοlsEx:OutlineTextBlock>

                                                        <!--<TextBlock   FontFamily="{Binding FontFamily}" FontSize="{Binding FontSize}" Foreground="{Binding Foreground}" FontStyle="{Binding FontStyle}" FontWeight="{Binding FontWeight}" Text="{Binding Text}"></TextBlock>\-->

                                                    </DataTemplate>


                                                    <DataTemplate DataType="{x:Type ViewModel:CanvasFrameViewModel}">
                                                        <Views:MovingFrame Visibility="{Binding Visibility}"  Width="{Binding Width}"  Height="{Binding Height}" ></Views:MovingFrame>
                                                    </DataTemplate>
                                                </ItemsControl.Resources>

                                                <ItemsControl.ItemContainerStyle>
                                                    <Style>
                                                        <Setter Property="Canvas.Top" Value="{Binding Path=Top}" />
                                                        <Setter Property="Canvas.Left" Value="{Binding Path=Left}" />
                                                    </Style>
                                                </ItemsControl.ItemContainerStyle>
                                            </ItemsControl>

                                            <Grid IsHitTestVisible="False" AllowDrop="False">
                                                <svgc:SvgViewbox AllowDrop="False" Margin="{Binding BorderMargin}" Visibility="{Binding BorderVisibility}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" s:SvgViewboxAttachedProperties.Drawing="{Binding BorderDrawing}"/>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Viewbox>
            </Grid>
            <!--Background="{StaticResource WindowBackgroundBrush}"-->

        </ScrollViewer>

        <Grid HorizontalAlignment="Right"  VerticalAlignment="Top"  Margin="0,12,48,0" Cursor="Hand">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid x:Name="LanguageControl" HorizontalAlignment="Center" VerticalAlignment="Center"  >
                <Button Style="{StaticResource TransparentStyle}" Command="{Binding LanguageCommand}"  x:Name="LanguageButton"   >
                    <StackPanel>
                        <Image x:Name="LanguageImage" Width="24" Height="24" Source="{Binding SelectedCulturePresentation.FlagImageUri}"></Image>
                        <Label Foreground="DarkBlue" Grid.Row="1" Margin="4" Content="{Binding DefaultLanguage}"></Label>
                    </StackPanel>
                </Button>

                <Popup Placement="Left" PlacementTarget="{Binding ElementName=LanguageImage}" AllowsTransparency="True"  PopupAnimation="Fade" x:Name="LanguagePopup"  StaysOpen="False"   >

                    <Border Grid.Row="1"   Background ="{StaticResource WindowBackColor}" BorderThickness="10" CornerRadius="10">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" ShadowDepth="5" />
                        </Border.Effect>
                        <Border  Background="{StaticResource WindowBackColor}" CornerRadius="10,10,10,10" Padding="6" >
                            <Grid>
                                <Grid >
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal"  Margin="3">
                                        <Label Content="{x:Static sw:CulturePresentation.LanguageLabel}"/>
                                        <ComboBox Width="256" Margin="10,0,0,0" ItemsSource="{Binding Cultures}"  SelectedItem="{Binding SelectedCulturePresentation}"  >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" >
                                                        <Image Width="24" Height="24" Source="{Binding FlagImageUri}"></Image>
                                                        <TextBlock Text="{Binding CultureInfo.EnglishName}" Margin="5,0,0,0"></TextBlock>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </StackPanel>
                                    <StackPanel  Margin="10" Grid.Row="1" Orientation="Horizontal">
                                        <CheckBox IsChecked="{Binding UseDefaultCultureWhenValueMissing}" Content="{x:Static sw:CulturePresentation.DefaultLanguageLabel}" ></CheckBox>
                                    </StackPanel>
                                </Grid>

                                <!--<ContentPresenter Content="{TemplateBinding LanguagePopup}"  />-->
                            </Grid>
                        </Border>
                    </Border>
                </Popup>

            </Grid>

        </Grid>



    </Grid>
</UserControl>
